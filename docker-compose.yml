version: '3.8'

services:
  git-clone:
    image: alpine/git
    container_name: git-clone
    volumes:
      - ./TOS_BE:/usr/src/TOS_BE
      - ./TOS_FE:/usr/src/TOS_FE
      - ./TOS_DB:/usr/src/TOS_DB
    entrypoint: /bin/sh -c 
      if [ -d /usr/src/TOS_BE/.git ]; then cd /usr/src/TOS_BE && git pull; else git clone https://github.com/bradly0cjw/Ticket_Order_System_BE.git /usr/src/TOS_BE; fi && \
      if [ -d /usr/src/TOS_FE/.git ]; then cd /usr/src/TOS_FE && git pull; else git clone https://github.com/bradly0cjw/Ticket_Order_System_FE.git /usr/src/TOS_FE; fi && \
      if [ -d /usr/src/TOS_DB/.git ]; then cd /usr/src/TOS_DB && git pull; else git clone https://github.com/bradly0cjw/Ticket_Order_System_DB.git /usr/src/TOS_DB; fi
    
    
    networks:
      - cont_network

  backend:
    build:
      context: ./TOS_BE
      dockerfile: Dockerfile
    container_name: tos-be-app
    ports:
      - "3000:3000"
    volumes:
      - ./TOS_BE/src:/usr/src/app/src
    environment:
      NODE_ENV: production
    depends_on:
      - git-clone
    networks:
      - cont_network

  frontend:
    build:
      context: ./TOS_FE
      dockerfile: Dockerfile
    container_name: tos-fe-app
    ports:
      - "8080:80"
    depends_on:
      - git-clone
    networks:
      - cont_network

  # database:
  #   image: postgres:latest
  #   container_name: tos-db
  #   environment:
  #     POSTGRES_USER: youruser
  #     POSTGRES_PASSWORD: yourpassword
  #     POSTGRES_DB: yourdb
  #   volumes:
  #     - db_data:/var/lib/postgresql/data
  #   networks:
  #     - cont_network

networks:
  cont_network:
    # external: true
    driver: bridge

# volumes:
#   db_data: