{
  "openapi": "3.0.0",
  "info": {
    "title": "Ticket Order System API",
    "version": "1.0.0"
  },
  "components": {
    "schemas": {
      "CreateUser": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "JohnDoe"
          },
          "email": {
            "type": "string",
            "example": "johndoe@example.com"
          },
          "password": {
            "type": "string",
            "example": "password123"
          }
        },
        "required": [
          "username",
          "email",
          "password"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "username": {
            "type": "string",
            "example": "JohnDoe"
          },
          "email": {
            "type": "string",
            "example": "johndoe@example.com"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2023-10-01T12:00:00Z"
          }
        }
      },
      "Event": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "event_name": {
            "type": "string",
            "example": "Concert"
          },
          "event_start": {
            "type": "string",
            "format": "date",
            "example": "2023-10-01"
          },
          "event_end": {
            "type": "string",
            "format": "date",
            "example": "2023-10-01"
          },
          "status": {
            "type": "string",
            "example": "active"
          },
          "description": {
            "type": "string",
            "example": "A great concert event."
          },
          "seller_id": {
            "type": "integer",
            "example": 1
          }
        }
      },
      "Ticket": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "event_id": {
            "type": "integer",
            "example": 1
          },
          "ticket_name": {
            "type": "string",
            "example": "VIP Ticket"
          },
          "ticket_start": {
            "type": "string",
            "format": "date",
            "example": "2023-10-01"
          },
          "ticket_end": {
            "type": "string",
            "format": "date",
            "example": "2023-10-02"
          },
          "price": {
            "type": "number",
            "format": "float",
            "example": 99.99
          },
          "status": {
            "type": "string",
            "example": "available"
          },
          "quantity": {
            "type": "integer",
            "example": 100
          },
          "description": {
            "type": "string",
            "example": "VIP access to the concert."
          },
          "image_path": {
            "type": "string",
            "example": "/images/vip_ticket.png"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "johndoe@example.com"
          },
          "password": {
            "type": "string",
            "example": "password123"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "role": {
            "type": "string",
            "example": "user"
          }
        }
      },
      "Coupon": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "code": {
            "type": "string",
            "example": "DISCOUNT10"
          },
          "discount_type": {
            "type": "string",
            "example": "percentage"
          },
          "discount_value": {
            "type": "number",
            "format": "float",
            "example": 10.0
          },
          "start_from": {
            "type": "string",
            "format": "date-time",
            "example": "2023-10-01T00:00:00Z"
          },
          "expired_at": {
            "type": "string",
            "format": "date-time",
            "example": "2023-12-31T23:59:59Z"
          }
        }
      }
    }
  },
  "paths": {
    "/ping": {
      "get": {
        "summary": "Returns pong",
        "responses": {
          "200": {
            "description": "Pong response"
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Retrieves a list of users",
        "responses": {
          "200": {
            "description": "A list of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Creates a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUser"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "get": {
        "summary": "Retrieves user information by auth token",
        "responses": {
          "200": {
            "description": "User information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "put": {
        "summary": "Updates a user by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The user ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "summary": "Deletes a user by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The user ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/events": {
      "get": {
        "summary": "Retrieves a list of events",
        "responses": {
          "200": {
            "description": "A list of events",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Creates a new event",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Event created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          }
        }
      }
    },
    "/events/{id}": {
      "put": {
        "summary": "Updates an event by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The event ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Event updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "404": {
            "description": "Event not found"
          }
        }
      },
      "delete": {
        "summary": "Deletes an event by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The event ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Event deleted successfully"
          },
          "404": {
            "description": "Event not found"
          }
        }
      }
    },
    "/events/{eventId}/tickets": {
      "get": {
        "summary": "Retrieves a list of tickets for an event",
        "parameters": [
          {
            "in": "path",
            "name": "eventId",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The event ID"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of tickets",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ticket"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/event/{eventId}": {
      "get": {
        "summary": "Get an event by ID",
        "parameters": [
          {
            "in": "path",
            "name": "eventId",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The event ID"
          }
        ],
        "responses": {
          "200": {
            "description": "An event",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          }
        }
      }
    },
    "/tickets": {
      "post": {
        "summary": "Creates a new ticket",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ticket"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ticket created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ticket"
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "Logs in a user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid email or password"
          }
        }
      }
    },
    "/coupons": {
      "get": {
        "summary": "Retrieves a list of coupons",
        "responses": {
          "200": {
            "description": "A list of coupons",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Coupon"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Creates a new coupon",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Coupon"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Coupon created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon"
                }
              }
            }
          }
        }
      }
    },
    "/coupons/{id}": {
      "put": {
        "summary": "Updates a coupon by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The coupon ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Coupon"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Coupon updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Coupon"
                }
              }
            }
          },
          "404": {
            "description": "Coupon not found"
          }
        }
      },
      "delete": {
        "summary": "Deletes a coupon by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The coupon ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Coupon deleted successfully"
          },
          "404": {
            "description": "Coupon not found"
          }
        }
      }
    }
  }
}